name: Build Image and Check for Tests

on:
  push:
    branches:
      - '**'
      - '!main'
env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  IMAGE_NAME: woopick-backend

jobs:
  build-push-gcr:
    name: Build and push to GCR
    runs-on: ubuntu-latest

    permissions:
      id-token: write 
      contents: read  

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: Woo-Pick-Fullfillment-Inventory/Backend-Woo-Inventory
          token: ${{ secrets.WOOPICK_GITHUB_TOKEN }}

      - name: Authenticate to WIF
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SA_GH_ACTIONS }}
          token_format: access_token
          export_environment_variables: true
    
      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./auto_update_tag.sh -v patch

      - name: Build and push Docker image
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |-
          gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet
          docker build -t europe-west3-docker.pkg.dev/$PROJECT_ID/woopick-registry/$IMAGE_NAME:latest .
          docker build -t europe-west3-docker.pkg.dev/$PROJECT_ID/woopick-registry/$IMAGE_NAME:$GIT_TAG .
          docker push europe-west3-docker.pkg.dev/$PROJECT_ID/woopick-registry/$IMAGE_NAME:latest
          docker push europe-west3-docker.pkg.dev/$PROJECT_ID/woopick-registry/$IMAGE_NAME:$GIT_TAG


  check-test:
    name: Execute tests
    runs-on: ubuntu-latest

    steps:
        - uses: actions/checkout@v3

        - name: start wiremock
          run: docker-compose -f up -d

        - name: Execute tests
          run: |-
            npm install -g firebase-tools
            npm install 
            npm run dev
            firebase emulators:exec --project=test-project 'npm run test'
        
        - name: stop wiremock
          run: docker-compose -f docker-compose.yml down